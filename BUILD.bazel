load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("@bazel_gazelle//:def.bzl", "gazelle")

# gazelle:prefix github.com/anacrolix/go-libutp
gazelle(name = "gazelle")

go_library(
    name = "go-libutp",
    srcs = [
        "callbacks.go",
        "conn.go",
        "deadline.go",
        "expvars.go",
        "libapi.go",
        "libutp_inet_ntop.h",
        "logging.go",
        "sockaddr.go",
        "socket.go",
        "status.go",
        "utp.go",
        "utp.h",
        "utp_api.cpp",
        "utp_callbacks.cpp",
        "utp_callbacks.h",
        "utp_hash.cpp",
        "utp_hash.h",
        "utp_internal.cpp",
        "utp_internal.h",
        "utp_packedsockaddr.cpp",
        "utp_packedsockaddr.h",
        "utp_templates.h",
        "utp_types.h",
        "utp_utils.cpp",
        "utp_utils.h",
    ],
    cgo = True,
    clinkopts = select({
        "@io_bazel_rules_go//go/platform:windows": [
            "-lws2_32",
        ],
        "//conditions:default": [],
    }),
    copts = [
        "-DPOSIX -DUTP_DEBUG_LOGGING=0",
        "-Wall -O3",
        "-Wall -O3 -fPIC -Wno-sign-compare",
        "-Wno-unused-const-variable",
    ] + select({
        "@io_bazel_rules_go//go/platform:windows": [
            "-D_WIN32_WINNT=0x600",
        ],
        "//conditions:default": [],
    }),
    importpath = "github.com/anacrolix/go-libutp",
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_anacrolix_missinggo//:missinggo",
        "@com_github_anacrolix_missinggo//inproc",
        "@com_github_anacrolix_mmsg//:mmsg",
        "@com_github_anacrolix_sync//:sync",
    ],
)

go_test(
    name = "go-libutp_test",
    srcs = [
        "bench_test.go",
        "callbacks_test.go",
        "conn_test.go",
        "logging_test.go",
        "socket_test.go",
        "utp_test.go",
    ],
    embed = [":go-libutp"],
    deps = [
        "@com_github_anacrolix_envpprof//:envpprof",
        "@com_github_anacrolix_missinggo//:missinggo",
        "@com_github_bradfitz_iter//:iter",
        "@com_github_frankban_quicktest//:quicktest",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_golang_x_net//nettest",
    ],
)
